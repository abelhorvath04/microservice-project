spring:
  application:
    name: ha1-microservice  # Name der Webservice-Instanz, wie sie im Eureka-Server erscheinen wird
  cloud:
    config:
      uri: http://localhost:8888
  config:
    import: optional:configserver:http://localhost:8888
  profiles:
    active: default
server:
  port: 0  #Dynamische Portvergabe
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/  # URL des Eureka-Servers
    registerWithEureka: true  # Sicherstellen, dass dieser Service bei Eureka registriert wird
    fetchRegistry: true
  instance:
    instance-id: ${spring.application.name}:${server.port}:${random.value}  # Eindeutige ID f√ºr jede Instanz
    metadata-map:
      port: ${server.port}
    prefer-ip-address: true  # Optional, um IP statt Hostnamen zu verwenden
logging:
  level:
    org.springframework.cloud.config: DEBUG
    org.springframework.boot.context.config: DEBUG